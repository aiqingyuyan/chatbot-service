# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import generated.chatbot_pb2 as chatbot__pb2


class ChatbotServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.heartBeat = channel.unary_unary(
        '/chatbot.ChatbotService/heartBeat',
        request_serializer=chatbot__pb2.HeartBeat.SerializeToString,
        response_deserializer=chatbot__pb2.HeartBeat.FromString,
        )
    self.chat = channel.unary_unary(
        '/chatbot.ChatbotService/chat',
        request_serializer=chatbot__pb2.ChatbotRequest.SerializeToString,
        response_deserializer=chatbot__pb2.ChatbotResponse.FromString,
        )


class ChatbotServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def heartBeat(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def chat(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ChatbotServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'heartBeat': grpc.unary_unary_rpc_method_handler(
          servicer.heartBeat,
          request_deserializer=chatbot__pb2.HeartBeat.FromString,
          response_serializer=chatbot__pb2.HeartBeat.SerializeToString,
      ),
      'chat': grpc.unary_unary_rpc_method_handler(
          servicer.chat,
          request_deserializer=chatbot__pb2.ChatbotRequest.FromString,
          response_serializer=chatbot__pb2.ChatbotResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'chatbot.ChatbotService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
